---
title: Stata
---

## Learning Stata

Our class assumes that you have previously used Stata---at least a little bit. Before our first class, you may review your course materials from [EDUC 288A](https://catalogue.uci.edu/search/?P=EDUC%2010) (Educational, Social, and Behavioral Statistics) and / or take a look at Chapters 3-4 in *Regression Analysis for the Social Science* [@gordon_regression_2010]. We will also dedicate our first lab session to review some of these materials.

You may use UCI's [Virtual Computing Lab](https://uci.apporto.com/) to access Stata for free. 

There are tons of online resources to help you with Stata. Three of the most important are [UCLA's Stata training site](https://stats.idre.ucla.edu/stata/seminars/notes15), the [Statalist](https://www.statalist.org/) forum, and  [StackOverflow](https://stackoverflow.com/) (a Q&A site with hundreds of thousands of answers to all sorts of programming questions). Also, ChatGPT will sometimes fool you but, as it was likely [trained on and (is quickly replacing) StackOverflow](https://www.linkedin.com/posts/tom-alder_the-irony-is-crushing-stack-overflows-activity-7099208596369903616-EQH6), it is quite good at writing Stata code.

If you haven't used Stata in a while, consider going over three introductory modules on the [UCLA page](https://stats.idre.ucla.edu/stata/seminars/notes15) under “Class Notes”—Entering, Exploring, Modifying.  This will take approximately 2 hours. [This](https://github.com/GeoCenter/StataTraining) "cheat sheet" of common Stata commands is a nice resource, too. 

## Other tutorials

Here, I list a selection of other introductory tutorials I find helpful. 

- Other useful Stata tutorials include J-PAL/IPA's Stata modules ([101](https://www.povertyactionlab.org/media/file-research-resource/stata-101), [102](https://www.povertyactionlab.org/media/file-research-resource/stata-102), [103](https://www.povertyactionlab.org/media/file-research-resource/stata-103), [104](https://www.povertyactionlab.org/media/file-research-resource/stata-104); all direct download; also on Github [here](https://github.com/PovertyAction/IPA-Stata-Trainings)), Stata's [own list of resources](https://www.stata.com/links/resources-for-learning-stata/), which includes a link to [cheat sheets](https://www.stata.com/bookstore/stata-cheat-sheets/), and the [Princeton DSS online tutorial](https://www.princeton.edu/~otorres/Stata/). 

- J-PAL also provides a [list of coding resources](https://www.povertyactionlab.org/resource/coding-resources-randomized-evaluations) for randomized trials, including resources on [how to work with teams in the social sciences](https://www.povertyactionlab.org/resource/coding-resources-randomized-evaluations#section-coding-with-teams-working-in-the-social-sciences), [guidance for reproducible work](https://www.povertyactionlab.org/resource/coding-resources-randomized-evaluations#section-guidance-for-reproducible-coding), and [how to write randomization code](https://www.povertyactionlab.org/resource/coding-resources-randomized-evaluations#section-writing-randomization-code).   

## Select tips

Here, I provide a brief list with a selection of tips. Others have written awesome [books](https://www.toddrjones.com/book/QuickStataTips.pdf) and [guides](https://medium.com/the-stata-guide), and constructed a ["coders' corner"](https://www.csae.ox.ac.uk/coders-corner) with tips---so this list won't be exhaustive. Still, I hope this helps. 

- [Generating LaTeX output](https://lukestein.github.io/stata-latex-workflows/). Of those, my go-to approach to writing fully flexible tables uses -file write-.
- [Making nicer graphs](https://www.danbischof.com/blog/2021/STATAFigureSchemes/). Of those, I prefer the -plotplainblind- scheme.
- [Methods to account for differential attrition in randomized trials](https://www.povertyactionlab.org/resource/data-analysis#section-threats). [Here](https://onlinelibrary.wiley.com/doi/10.1002/pam.22533), my co-authors and I use more advanced methods.
- [Multiple hypothesis testing](https://www.povertyactionlab.org/resource/coding-resources-randomized-evaluations#section-guidance-for-reproducible-coding).
- [Power calculations](https://dimewiki.worldbank.org/Power_Calculations_in_Stata) and [ex-post calculation of MDEs](https://owenozier.github.io/posts/2019/06/blog-post-ex-post-mde/).
- [Randomization](https://www.povertyactionlab.org/resource/coding-resources-randomized-evaluations#section-writing-randomization-code). Of those, I especially like the -randtreat- command.
- [Randomization inference](https://blogs.worldbank.org/impactevaluations/finally-way-do-easy-randomization-inference-stata).
- [Reproducible coding](https://www.povertyactionlab.org/resource/coding-resources-randomized-evaluations#section-guidance-for-reproducible-coding).
- [Selection on observables](http://economics.ozier.com/econ626/), including [how to replicate](http://economics.ozier.com/econ626/act/econ626-2019-L6-A1-coef-stability-answers.do) Emily Oster's [bounding method](https://www.tandfonline.com/doi/full/10.1080/07350015.2016.1227711) and how to use her -psacalc- command.

